---
- hosts: all
  become: true
  vars_files:
    - vars/default.yml

  tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'curl', 'python3', 'python3-dev', 'python3-pip']

    - name: Download the TLJH installer
      get_url:
        url: "{{ tljh_installer_url }}"
        dest: "{{ tljh_installer_dest }}"

    - name: Upgrade the tljh-plasmabio plugin
      shell: "{{ tljh_prefix }}/hub/bin/pip3 install --upgrade {{ tljh_plasmabio }}"
      # ignore errors if this is a fresh install
      ignore_errors: yes

    - name: Run the TLJH installer
      shell: "{{ ansible_python_interpreter }} {{ tljh_installer_dest }} --no-user-env --plugin {{ tljh_plasmabio }} --admin foo"
      # TODO: remove when --no-user-env (or equivalent) is available
      environment:
        TLJH_BOOTSTRAP_PIP_SPEC: "{{ tljh_bootstrap_pip_spec }}"

    - name: Copy the config
      copy:
        dest: "{{ tljh_prefix }}/config/config.yaml"
        content: |
          https:
            enabled: true
            letsencrypt:
              email: {{ letsencrypt_email }}
              domains:
                - {{ letsencrypt_domain }}
          services:
            cull:
              timeout: 3600

    - name: Reload the hub
      shell: "{{ tljh_prefix }}/hub/bin/python3 -m tljh.config reload hub"

    # Special task to disable HTTPS only when the --no-https flag is specified
    # The never tag is a special tag, see: https://docs.ansible.com/ansible/latest/user_guide/playbooks_tags.html#special-tags
    - name: Disable HTTPS
      shell: "{{ tljh_prefix }}/hub/bin/python3 -m tljh.config set https.enabled false"
      tags: [ never, no-https ]


    # TODO: do not restart the proxy each time, only on install
    - name: Reload the proxy
      shell: "{{ tljh_prefix }}/hub/bin/python3 -m tljh.config reload proxy"

    # Pull the repo2docker image to build user images
    - name: Pull jupyter/repo2docker
      docker_image:
        name: jupyter/repo2docker
        tag: master
        source: pull
